<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ambition.agile.modules.org.dao.OrgDao">
    
	<sql id="orgColumns">
		a.id AS "id",
		a.name AS "name",
		a.sc_code AS "scCode",
		a.reg_money AS "regMoney",
		a.reg_address AS "regAddress",
		a.buslice_path AS "buslicePath",
		a.email AS "email",
		a.total_asset AS "totalAsset",
		a.net_asset AS "netAsset",
		a.logo_path AS "logoPath",
		a.status AS "status",
		a.area_id AS "area.id",
		a.nature AS "nature",
		a.create_date AS "createDate",
		a.create_id AS "createId",
		a.type AS "type",
		a.area_parentids AS areaParentids,
		a.description AS "description",
		a.legalrep_name AS "legalrepName",
		a.legalrep_card AS "legalrepCard",
		a.legalrep_phone AS "legalrepPhone",
		a.legalrep_address AS "legalrepAddress",
		a.legalrep_zipcode AS "legalrepZipcode",
		a.legalrep_photo AS "legalrepPhoto",
		a.socialinsu_photo AS "socialinsuPhoto",
		a.recent_money AS "recentMoney",
		a.submit_time AS "submitTime",
		a.audit_time AS "auditTime",
		a.final_time AS "finalTime",
		a.staff_on AS "staffOn",
		a.qualification_on AS "qualificationOn",
		a.achieve_on AS "achieveOn",
		a12.name AS "area.name"
	</sql>
	
	<sql id="orgJoins">
		LEFT JOIN sys_area a12 ON a12.id = a.area_id
	</sql>
    
	<select id="get" resultType="Org">
		SELECT 
			<include refid="orgColumns"/>
		FROM org a
		<include refid="orgJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Org">

		<choose>
			<when test="id != null and id == 1">
				select t3.id, t3.name, t3.area_id, sysa.name as 'area.name', t3.nature, ifnull(t3.recentMoney,0) as recentMoney
				from sys_area sysa RIGHT JOIN
				(select o.id, o.name, o.area_id, o.nature, t2.bid_money as recentMoney
				from org o left join 
				(select p.org_id, sum(p.bid_money) as bid_money
				from project p
				<where>
				    and p.status=1 and is_center=1
					<if test="yearSearch != null and yearSearch != ''">
						and year(p.bid_time)=#{yearSearch}
					</if>
					<if test="monthSearch != null and monthSearch != ''">
						and month(p.bid_time)=#{monthSearch}
					</if>
					<if test="area != null and area.id != null and area.id != ''">
						and area_id = #{area.id}
					</if>
				</where> 
				group by p.org_id) t2 on o.id=t2.org_id) t3 on sysa.id=t3.area_id
				<where>
					<if test="name != null and name != ''">
						and t3.name LIKE concat('%',#{name},'%')
					</if>
					<if test="nature != null and nature != ''">
						and t3.nature = #{nature}
					</if>
					<if test="area != null and area.id != null and area.id != ''">
						and area_id = #{area.id}
					</if>
				</where>
				order by t3.recentMoney desc
				
			</when>
			<otherwise>
				SELECT 
				<include refid="orgColumns"/>
				FROM org a
				<include refid="orgJoins"/>
				<where>
					<if test="name != null and name != ''">
						AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
					</if>
					<if test="area != null and area.id != null and area.id != ''">
						AND a.area_id = #{area.id}
					</if>
					<if test="scCode != null and scCode != ''">
						AND a.sc_code = #{scCode}
					</if>
					<if test="status != null and status != ''">
						<if test="status &lt; 10">				
						AND a.status = #{status}
						</if>
						<if test="status == 25">				
						AND (a.status = '2' or a.status = '5' )
						</if>
						<if test="status == 36">				
						AND (a.status = '3' or a.status = '6' )
						</if>
						<if test="status == 368">				
						AND (a.status = '3' or a.status = '6' or a.status = '8')
						</if>
					</if>
					<if test="nature != null and nature != ''">
						AND a.nature = #{nature}
					</if>
					<if test="beginCreateDate != null and endCreateDate != null and beginCreateDate != '' and endCreateDate != ''">
						AND a.create_date BETWEEN #{beginCreateDate} AND #{endCreateDate}
					</if>
					<if test="type != null and type != ''">
						AND a.type = #{type}
					</if>
					<if test="areaParentids != null and areaParentids != ''">
						AND a.area_parentids = #{areaParentids}
					</if>
				</where>
				<choose>
					<when test="page !=null and page.orderBy != null and page.orderBy != ''">
						ORDER BY ${page.orderBy}
					</when>
					<otherwise>
					</otherwise>
				</choose>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Org">
		SELECT 
			<include refid="orgColumns"/>
		FROM org a
		<include refid="orgJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert"  useGeneratedKeys="true" keyProperty="id">
		INSERT INTO org(
			name,
			sc_code,
			reg_money,
			reg_address,
			buslice_path,
			email,
			total_asset,
			net_asset,
			logo_path,
			status,
			area_id,
			area_parentids,
			nature,
			create_date,
			create_id,
			type,
			description,
			legalrep_name,
			legalrep_card,
			legalrep_phone,
			legalrep_address,
			legalrep_zipcode,
			legalrep_photo,
			socialinsu_photo
		) VALUES (
			#{name},
			#{scCode},
			#{regMoney},
			#{regAddress},
			#{buslicePath},
			#{email},
			#{totalAsset},
			#{netAsset},
			#{logoPath},
			#{status},
			#{area.id},
			#{areaParentids},
			#{nature},
			#{createDate},
			#{createId},
			#{type},
			#{description},
			#{legalrepName},
			#{legalrepCard},
			#{legalrepPhone},
			#{legalrepAddress},
			#{legalrepZipcode},
			#{legalrepPhoto},
			#{socialinsuPhoto}
		)
	</insert>
	
	<update id="update">
		UPDATE org SET 	
			name = #{name},
			sc_code = #{scCode},
			reg_money = #{regMoney},
			reg_address = #{regAddress},
			buslice_path = #{buslicePath},
			email = #{email},
			total_asset = #{totalAsset},
			net_asset = #{netAsset},
			logo_path = #{logoPath},
			status = #{status},
			area_id = #{area.id},
			area_parentids = #{areaParentids},
			nature = #{nature},
			create_id = #{createId},
			type = #{type},
			description = #{description},
			legalrep_name = #{legalrepName},
			legalrep_card = #{legalrepCard},
			legalrep_phone = #{legalrepPhone},
			legalrep_address = #{legalrepAddress},
			legalrep_zipcode = #{legalrepZipcode},
			legalrep_photo = #{legalrepPhoto},
			socialinsu_photo = #{socialinsuPhoto},
			submit_time = #{submitTime},
			audit_time = #{auditTime},
			final_time = #{finalTime}
		WHERE id = #{id}
	</update>
	<update id="updateStateOn">
		UPDATE org SET 	
			staff_on = #{staffOn},
			qualification_on = #{qualificationOn},
			achieve_on = #{achieveOn}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM org
		WHERE id = #{id}
	</update>
	
	<update id="updateById" parameterType="java.util.Map">
		UPDATE org SET 	status = #{status}  WHERE id in 
		 		<foreach item="item" index="index" collection="id" 
                         open="(" separator="," close=")">
                        #{item}
                </foreach>
	</update>
	
	<!-- 查询社会信用code -->
	<select id="selectOrgcode" parameterType="java.lang.String" resultType="Integer">
		SELECT count(sc_code) FROM org a WHERE a.sc_code = #{scCode} 
	</select>
	
	<!-- 查询名录的前10条 -->
 
	<select id="findOrgInfoByNum" resultType="Org">
		SELECT 
			<include refid="orgColumns"/>
		FROM org a
		<include refid="orgJoins"/>  
		WHERE status=3 ORDER BY a.create_date
		LIMIT 10
	</select>
	
	<!--  机构变更时 查询 -->
	<select id="getOrgByScCode" parameterType="Org" resultType="Integer">
		SELECT count(id) FROM org a WHERE a.sc_code = #{scCode}  and a.id != #{id}
	</select>
	
	<!--  根据企业性质查询前10条数据 -->
	<select id="getOrgByNature" parameterType="java.lang.String" resultType="Org">
		SELECT  a.id,a.name FROM org a WHERE a.status='3'  and a.nature = #{nature} ORDER BY a.create_date
		LIMIT 10
	</select>

	
	<!-- 获取某个区域下机构名录总个数 -->
	<select id="getOrgCountByAreaId" parameterType="java.lang.Integer" resultType="Integer">
		SELECT count(id) FROM org a WHERE a.status = 3 and  a.area_id = #{areaId} 
	</select>
	<select id="getLimitOrgs" parameterType="java.util.Map" resultType="Org">
		SELECT 
			a.id AS "id" 
		FROM org a 
		WHERE a.status = 3 and a.area_id = #{areaId} limit #{num}
	</select>
	
	<select id="getAreaStaticByAreaId" parameterType="Integer" resultType="java.util.Map">
		select t1.org_count, t2.project_count, t2.bid_money from
		( select count(id) as org_count from org where area_id = #{areaId} ) t1,
		( select count(id) as project_count, ifnull(sum(bid_money),0) as bid_money from project where is_center=1 and area_id = #{areaId} ) t2
	</select>
	
	<select id="getAreaStaticByAreaIdYear" parameterType="java.util.Map" resultType="java.util.Map">
		select count(id) as project_count, ifnull(sum(bid_money),0)/10000 as bid_money 
		from project where is_center=1 
		       <if test="areaId != null and areaId != ''">
				and area_id = #{areaId}
				</if>	
		 and year(bid_time) = year(now())
	</select>
	
	<select id="getArearStaticByAreaIdWeek" parameterType="java.util.Map" resultType="java.util.Map">
		select t1.project_count1, t1.bid_money1/10000, t2.project_count2, t2.bid_money2/10000, t3.project_count3, t3.bid_money3/10000, t4.project_count4, t4.bid_money4/10000 from
			( select count(id) as project_count1, ifnull(sum(bid_money),0) as bid_money1 from project 
				where is_center=1  
				<if test="areaId != null and areaId != ''">
				and area_id = #{areaId}
				</if>	
				and bid_time >= CONCAT(year(now()),'-',month(now()),'-','01') and bid_time &lt;= CONCAT(year(now()),'-',month(now()),'-','07')) t1,
			( select count(id) as project_count2, ifnull(sum(bid_money),0) as bid_money2 from project 
				where is_center=1 
				<if test="areaId != null and areaId != ''">
				and area_id = #{areaId}
				</if>
				and bid_time >= CONCAT(year(now()),'-',month(now()),'-','08') and bid_time &lt;= CONCAT(year(now()),'-',month(now()),'-','14')) t2,
			( select count(id) as project_count3, ifnull(sum(bid_money),0) as bid_money3 from project 
				where is_center=1 
				<if test="areaId != null and areaId != ''">
				and area_id = #{areaId}
				</if>
				and bid_time >= CONCAT(year(now()),'-',month(now()),'-','15') and bid_time &lt;= CONCAT(year(now()),'-',month(now()),'-','21')) t3,
			( select count(id) as project_count4, ifnull(sum(bid_money),0) as bid_money4 from project 
				where is_center=1 
				<if test="areaId != null and areaId != ''">
				and area_id = #{areaId}
				</if>
				and bid_time >= CONCAT(year(now()),'-',month(now()),'-','22') and bid_time &lt;= CONCAT(year(now()),'-',month(now()),'-','31')) t4
	</select>
	
	
	<select id="getOrgStaticForIndex" resultType="java.util.Map" parameterType="java.util.Map">
		select t3.id, t3.name, t3.area_id, sysa.name as areaName, t3.nature, ifnull(t3.bid_money,0) as bid_money
		from sys_area sysa RIGHT JOIN
		(select o.id, o.name, o.area_id, o.nature, t2.bid_money
		from org o left join 
		(select p.org_id, sum(p.bid_money) as bid_money
		from project p
		<where>
		    and p.status = 1 and p.is_center = 1
			<if test="year != null and year != ''">
				and year(p.bid_time) = #{year}
			</if>
			<if test="area != null and area != ''">
				and p.area_id = #{area}
			</if>
		</where> 
		group by p.org_id) t2 on o.id=t2.org_id) t3 on sysa.id=t3.area_id
		<where>
			<if test="nature != null and nature != ''">
				and t3.nature = #{nature}
			</if>
			<if test="area != null and area != ''">
				and t3.area_id = #{area}
			</if>
		</where>
		order by t3.bid_money desc limit 10
	</select>
	
	<select id="getStatus1OrgsByLastsDay" parameterType="java.util.Map" resultType="Org">
		<!-- SELECT 
			<include refid="orgColumns"/>
		FROM org a
		<include refid="orgJoins"/>
		WHERE a.status = #{status} and datediff(now(),a.submit_time) >= #{lastsDay} -->
		
		 
			SELECT a.id AS "id",
		a.name AS "name",
		a.sc_code AS "scCode",
		a.reg_money AS "regMoney",
		a.reg_address AS "regAddress",
		a.buslice_path AS "buslicePath",
		a.email AS "email",
		a.total_asset AS "totalAsset",
		a.net_asset AS "netAsset",
		a.logo_path AS "logoPath",
		a.status AS "status",
		a.area_id AS "area.id",
		a.nature AS "nature",
		a.create_date AS "createDate",
		a.create_id AS "createId",
		a.type AS "type",
		a.area_parentids AS areaParentids,
		a.description AS "description",
		a.legalrep_name AS "legalrepName",
		a.legalrep_card AS "legalrepCard",
		a.legalrep_phone AS "legalrepPhone",
		a.legalrep_address AS "legalrepAddress",
		a.legalrep_zipcode AS "legalrepZipcode",
		a.legalrep_photo AS "legalrepPhoto",
		a.socialinsu_photo AS "socialinsuPhoto",
		a.recent_money AS "recentMoney",
		a.submit_time AS "submitTime",
		a.audit_time AS "auditTime",
		a.final_time AS "finalTime",b.email  FROM org a  LEFT JOIN org_user b ON b.id = a.org_id WHERE a.status = #{status} and datediff(now(),a.submit_time) >= #{lastsDay}
		
	</select>
	<select id="getStatus2OrgsByLastsDay" parameterType="java.util.Map" resultType="Org">
		<!-- SELECT 
			<include refid="orgColumns"/>
		FROM org a
		<include refid="orgJoins"/>
		WHERE a.status = #{status} and datediff(now(),a.audit_time) >= #{lastsDay} -->
		SELECT a.id AS "id",
		a.name AS "name",
		a.sc_code AS "scCode",
		a.reg_money AS "regMoney",
		a.reg_address AS "regAddress",
		a.buslice_path AS "buslicePath",
		a.email AS "email",
		a.total_asset AS "totalAsset",
		a.net_asset AS "netAsset",
		a.logo_path AS "logoPath",
		a.status AS "status",
		a.area_id AS "area.id",
		a.nature AS "nature",
		a.create_date AS "createDate",
		a.create_id AS "createId",
		a.type AS "type",
		a.area_parentids AS areaParentids,
		a.description AS "description",
		a.legalrep_name AS "legalrepName",
		a.legalrep_card AS "legalrepCard",
		a.legalrep_phone AS "legalrepPhone",
		a.legalrep_address AS "legalrepAddress",
		a.legalrep_zipcode AS "legalrepZipcode",
		a.legalrep_photo AS "legalrepPhoto",
		a.socialinsu_photo AS "socialinsuPhoto",
		a.recent_money AS "recentMoney",
		a.submit_time AS "submitTime",
		a.audit_time AS "auditTime",
		a.final_time AS "finalTime",b.email  FROM org a  LEFT JOIN org_user b ON b.id = a.org_id WHERE a.status = #{status} and datediff(now(),a.audit_time) >= #{lastsDay}
	</select>
	
	<update id="updateRecentMoney">
		update org set recent_money = #{recentMoney}  WHERE id = #{id}
	</update>
</mapper>