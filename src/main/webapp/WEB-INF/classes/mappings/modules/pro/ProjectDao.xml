<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ambition.agile.modules.pro.dao.ProjectDao">
    
	<sql id="projectColumns">
		a.id AS "id",
		a.sn AS "sn",
		a.name AS "name",
		a.tenderee AS "tenderee",
		a.contact AS "contact",
		a.bidding_agency AS "biddingAgency",
		a.leader AS "leader",
		a.leader_phone AS "leaderPhone",
		a.tender_type AS "tenderType",
		a.entrust_unit AS "entrustUnit",
		a.entrust_money AS "entrustMoney",
		a.entrust_time AS "entrustTime",
		a.tender_method AS "tenderMethod",
		a.notice_media AS "noticeMedia",
		a.notice_date AS "noticeDate",
		a.opentender_time AS "opentenderTime",
		a.credit_require AS "creditRequire",
		a.content AS "content",
		a.remark AS "remark",
		a.area_name AS "areaName",
		a.org_id AS "orgId",
		a.bid_time AS "bidTime",
		a.area_id AS "areaId",
		a.status AS "status",
		a.engineer_id AS "engineerId",
		a.is_center AS "isCenter",
		a.is_history AS "isHistory",
		b.bid_money AS "projectFlow.bidMoney",
		b.bid_unit AS "projectFlow.bidUnit",
		c.approval_number AS "engineer.approvalNumber",
		a.bid_money as "bidMoney",
		a.bid_unit as "bidUnit"
	</sql>
	
	<sql id="projectJoins">
	    <!-- LEFT JOIN project_flow b ON b.project_id = a.id -->
	    LEFT JOIN project_flow b ON a.id = b.project_id ) LEFT JOIN  engineer c on a.engineer_id=c.id
	</sql>
    
	<select id="get" resultType="Project">
		SELECT 
			<include refid="projectColumns"/>
		FROM (project a
		<include refid="projectJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Project">
		SELECT 
			<include refid="projectColumns"/>
		FROM (project a
		<include refid="projectJoins"/>
		<where>
			
			<if test="sn != null and sn != ''">
				AND a.sn LIKE 
					<if test="dbName == 'oracle'">'%'||#{sn}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{sn}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{sn},'%')</if>
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="orgId != null and orgId != ''">
				AND a.org_Id = #{orgId}					
			</if>
			<if test="areaId != null and areaId != ''">
				AND a.area_id = #{areaId}
			</if>
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
			<if test="isCenter != null">
				AND a.is_center = #{isCenter}
			</if>
			
			<if test="tenderType != null and tenderType != ''">
				AND a.tender_type = #{tenderType}
			</if>
			<if test="bidTime != null and bidTime != ''">
			
				AND a.bid_time = #{bidTime}
			</if>
			<if test="startBidTime != null and startBidTime != ''">
				AND a.bid_time>=#{startBidTime}
			</if>
			<if test="endBidTime != null and endBidTime != ''">
				AND #{endBidTime} > a.bid_time   
			</if>
			<if test="biddingAgency != null and biddingAgency != ''">
				AND a.bidding_agency LIKE  concat('%',#{biddingAgency},'%') 
			</if>
			<if test="approvalNumber != null and approvalNumber != ''">
				AND c.approval_number LIKE  concat('%',#{approvalNumber},'%') 
				 
			</if>
			AND a.is_history = 0
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy} desc
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Project">
		SELECT 
			<include refid="projectColumns"/>
		FROM (project a
		<include refid="projectJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy} desc
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO project(
			sn,
			name,
			tenderee,
			contact,
			bidding_agency,
			leader,
			leader_phone,
			tender_type,
			entrust_unit,
			entrust_money,
			entrust_time,
			tender_method,
			notice_media,
			notice_date,
			opentender_time,
			credit_require,
			content,
			bid_time,
			area_name,
			remark,
			org_id,
			status,
			area_id,
			engineer_id,
			is_center,
			bid_money,
			bid_unit,
			is_history
		) VALUES (
			#{sn},
			#{name},
			#{tenderee},
			#{contact},
			#{biddingAgency},
			#{leader},
			#{leaderPhone},
			#{tenderType},
			#{entrustUnit},
			#{entrustMoney},
			#{entrustTime},
			#{tenderMethod},
			#{noticeMedia},
			#{noticeDate},
			#{opentenderTime},
			#{creditRequire},
			#{content},
			#{bidTime},
			#{areaName},
			#{remark},
			#{orgId},
			#{status}, 
			 #{areaId},
			#{engineerId},
			#{isCenter},
			#{bidMoney},
			#{bidUnit},
			#{isHistory}
		)
	</insert>
	
	
	<insert id="noticeInsert" parameterType="Map">
		INSERT INTO project_notice(
			  project_id,
			  type,
			  file_path,
			  order_num
		) VALUES (
			#{project_id},
			#{type},
			#{file_path},
			#{order_num}
		)
	</insert>
	
	
	<update id="update">
		UPDATE project SET 	
			sn = #{sn},
			name = #{name},
			tenderee = #{tenderee},
			contact = #{contact},
			bidding_agency = #{biddingAgency},
			leader = #{leader},
			leader_phone = #{leaderPhone},
			tender_type = #{tenderType},
			entrust_unit = #{entrustUnit},
			entrust_money = #{entrustMoney},
			entrust_time = #{entrustTime},
			tender_method = #{tenderMethod},
			notice_media = #{noticeMedia},
			notice_date = #{noticeDate},
			opentender_time = #{opentenderTime},
			credit_require = #{creditRequire},
			content = #{content},
			remark = #{remark},
			org_id = #{orgId},
			status=#{status},
			engineer_id = #{engineerId},
			is_center = #{isCenter},
			bid_money = #{bidMoney},
			bid_unit = #{bidUnit}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM project
		WHERE id = #{id}
	</update>
	
	<select id="findInfoByOrgId" parameterType="Integer"  resultType="Project">
		SELECT 
			<include refid="projectColumns"/>
		FROM (project a <include refid="projectJoins"/>  WHERE a.org_id = #{orgId}
	</select>
	
	<!-- 查询项目的前10条 -->
	<select id="findProjectInfoByNum"  resultType="Project">
		SELECT 	<include refid="projectColumns"/>  FROM (project a <include refid="projectJoins"/> WHERE a.status=1 AND a.is_history=0 ORDER BY a.bid_time DESC limit 10
	</select>
	
	<select id="getCountByOrgId" parameterType="java.lang.Integer" resultType="Integer">
		SELECT count(id) FROM project a where a.org_id = #{orgId} 
	</select>
	
	
	<select id="getLimitProjects" parameterType="java.util.Map"  resultType="OrgProjectExcel">
		select t1.sn,t1.name as projectName,t2.name as orgName,t2.sc_code as scCode,t1.area_name as areaName 
		from project t1 left join org t2 on t1.org_id = t2.id
		 where t1.org_id = #{orgId} and t1.is_history = 0
		 limit #{proNum}
		
	</select>
	<!-- 近三年项目金额 -->
	<select id="getProRecentMoney" parameterType="Org" resultType="Double">
		select sum(a.bid_money) from project a where a.status = 1
		 and a.org_id = #{id} and DATE_FORMAT(a.bid_time, '%Y') <![CDATA[ >= ]]>   DATE_FORMAT(now(), '%Y')-'3' AND  DATE_FORMAT(a.bid_time, '%Y')  <![CDATA[ <= ]]>   DATE_FORMAT(now(), '%Y')-'1' 
	</select>
	<!-- 近三年 业绩金额 -->
	<select id="getAhieveRecentMoney" resultType="Double">
		select sum(a.bid_money) from project a where a.is_history = 1
		 and a.org_id = #{id} and DATE_FORMAT(a.bid_time, '%Y') <![CDATA[ >= ]]>   DATE_FORMAT(now(), '%Y')-'3' AND  DATE_FORMAT(a.bid_time, '%Y')  <![CDATA[ <= ]]>   DATE_FORMAT(now(), '%Y')-'1' 
		
	</select>
	
</mapper>